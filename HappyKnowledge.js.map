{"version":3,"sources":["HappyKnowledge.es6"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAEb,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAClC,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AACxB,IAAI,IAAG,GAAG;AACN,WAAO,EAAM,OAAO;AACpB,aAAS,EAAI,SAAS;AACtB,UAAM,EAAO,OAAO;AACpB,cAAU,EAAG,UAAU;CAC1B,CAAC;;AAEF,MAAM,CAAC,OAAO;iBAAS,cAAc;;mCAGhB;AAAC,mBAAO,GAAG,CAAC,wBAAwB,CAAC;SAAC;;;AAGvD,aANmB,cAAc,CAMrB,KAAK,EAAC,OAAO,EAAC,IAAI,EAAC,QAAQ,EAAE,EAAE,EAAC;8BANzB,cAAc;;AAO7B,YAAI,CAAC,EAAE,GAAS,EAAE,CAAC;AACnB,YAAI,CAAC,KAAK,GAAM,KAAK,CAAC;AACtB,YAAI,CAAC,OAAO,GAAI,OAAO,CAAC;AACxB,YAAI,CAAC,IAAI,GAAO,IAAI,CAAC;AACrB,YAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;;iBAZkB,cAAc;;gCA0B1B;AACH,mBAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;AAC/C,iBAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,UAAC,YAAY,EAAI;AAC7F,uBAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAChC,uBAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC1B,uBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;aAC7C,CAAC,CAAC;SACN;;;8BAUI;AACD,mBAAO,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACnC;;;4BA/BU,EAAE,EAAE,SAAS,EAAC;AACrB,iBAAK,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,GAAG,EAAE,EAAE,IAAI,EAAE,UAAC,YAAY,EAAG;AACtD,yBAAS,CAAC,IAAI,cAAc,CACxB,YAAY,CAAC,IAAG,CAAC,OAAO,CAAC,CAAI,EAC7B,YAAY,CAAC,IAAG,CAAC,SAAS,CAAC,CAAE,EAC7B,YAAY,CAAC,IAAG,CAAC,MAAM,CAAC,CAAK,EAC7B,YAAY,CAAC,IAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAEjC,CAAC;aACL,CAAC,CAAC;SACN;;;4BAWU,SAAS,EAAC;AACjB,gBAAI,MAAM,GAAG,EAAE,CAAC;AAChB,iBAAI,IAAI,GAAG,IAAI,IAAG,EAAC;AACf,sBAAM,CAAC,IAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;aAChC;AACD,mBAAO,MAAM,CAAC;SACjB;;;WAzCkB,cAAc;GAgDpC,CAAC","file":"HappyKnowledge.js","sourcesContent":["\"use strict\";\n\nvar Podio = require('./Podio.js');\nvar podio = new Podio();\nvar map = {\n    'title'    : \"titel\",\n    'slackId'  : \"slackId\",\n    'date'     : \"datum\",\n    'happydex' : \"happydex\",\n};\n\nmodule.exports = class HappyKnowledge {\n\n\n    static getAppId(){return env.podioHappyKnowledgeAppId;}\n\n\n    constructor(title,slackId,date,happydex, id){\n        this.id       = id;\n        this.title    = title;\n        this.slackId  = slackId;\n        this.date     = date;\n        this.happydex = happydex;\n    }\n\n    static get(id, _callback){\n        podio.request('get', '/item/' + id, null, (responseData)=>{\n            _callback(new HappyKnowledge(\n                responseData[map['title']   ],\n                responseData[map['slackId'] ],\n                responseData[map['date']    ],\n                responseData[map['happydex']])\n\n            );\n        });\n    }\n\n    write(){\n        console.log('will try to write data to podio');\n        podio.action(podio.podio.request('post', '/item/', JSON.stringify(this.map())), (responseData)=> {\n            console.log('podio responses:');\n            console.log(responseData);\n            console.log(JSON.stringify(responseData));\n        });\n    }\n\n    static map(knowledge){\n        var mapped = {};\n        for(var key in map){\n            mapped[map[key]] = this[key];\n        }\n        return mapped;\n    }\n\n    map(){\n        return HappyKnowledge.map(this);\n    }\n\n\n};"]}